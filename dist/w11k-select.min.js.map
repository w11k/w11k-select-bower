{"version":3,"file":null,"sources":["../src/lib/set-selected.ts","../src/lib/external-option-2-value.ts","../src/lib/internal-option-2-value.ts","../src/lib/internal-options-2-external-model.ts","../src/lib/value-2-tracking-id.ts","../src/lib/external-option-2-label.ts","../src/lib/external-options-2-internal-options.ts","../src/lib/collect-active-labels.ts","../src/lib/build-internal-options-map.ts","../src/w11k-select.directive.ts","../src/w11k-select-option/w11k-select-option.directive.ts","../src/w11k-select-checkbox/w11k-checkbox.directive.ts","../src/w11k-select-infinite-scroll.directive.ts","../src/lib/key-listener.ts","../src/model/config.model.ts","../src/model/option-state.enum.ts","../src/w11k-select-helper.factory.ts","../src/model/internal-option.model.ts","../src/w11k-select.ts"],"sourcesContent":["import {InternalOption} from '../model/internal-option.model';\nimport {OptionState} from '../model/option-state.enum';\n\nexport function setSelected (options: InternalOption[], selected: boolean) {\n  let i = options.length;\n  while (i--) {\n    options[i].selected = selected;\n    options[i].state = selected ? OptionState.selected : OptionState.unselected;\n\n    setSelected(options[i].children || [], selected);\n  }\n}\n","export function externalOption2value (option, optionsExpParsed) {\n  let context = {};\n  context[optionsExpParsed.item] = option;\n\n  return optionsExpParsed.value(context);\n}\n","import {externalOption2value} from './external-option-2-value';\n\nexport function internalOption2value (option, optionsExpParsed) {\n  return externalOption2value(option.model, optionsExpParsed);\n}\n","import {internalOption2value} from './internal-option-2-value';\nimport {Config} from '../model/config.model';\nimport {InternalOption} from '../model/internal-option.model';\nimport {OptionState} from '../model/option-state.enum';\n\nexport function internalOptions2externalModel (options, optionsExpParsed, config: Config) {\n  let arr = [];\n  options.forEach(option => traverse(option, arr, optionsExpParsed));\n  return arr;\n}\n\nfunction traverse (option: InternalOption, arr, optionsExpParsed) {\n  if (option.state === OptionState.selected) {\n    arr.push(internalOption2value(option, optionsExpParsed));\n  }\n  option.children.forEach(option => traverse(option, arr, optionsExpParsed));\n\n}\n","export function value2trackingId (value, w11kSelectHelper, optionsExpParsed) {\n  if (optionsExpParsed.tracking !== undefined) {\n    let context = {};\n    let assignValueFn = optionsExpParsed.value.assign;\n    assignValueFn(context, value);\n\n    let trackingValue = optionsExpParsed.tracking(context);\n\n    if (trackingValue === undefined) {\n      throw new Error('Couldn\\'t get \\'track by\\' value. Please make sure to only use something in \\'track byâ€™ part of w11kSelectOptions expression, accessible from result of value part. (\\'option.data\\' and \\'option.data.unique\\' but not \\'option.unique\\')');\n    }\n\n    return trackingValue.toString();\n  } else {\n    return w11kSelectHelper.hashCode(value);\n  }\n\n}\n","export function externalOption2label (option, optionsExpParsed) {\n  let context = {};\n  context[optionsExpParsed.item] = option;\n\n  return optionsExpParsed.label(context);\n}\n","import {externalOption2value} from './external-option-2-value';\nimport {externalOption2label} from './external-option-2-label';\nimport {value2trackingId} from './value-2-tracking-id';\nimport {OptionState} from '../model/option-state.enum';\nimport {ConfigInstance} from '../model/config.model';\nimport {InternalOption} from '../model/internal-option.model';\n\nexport function externalOptions2internalOptions (externalOptions, viewValue, w11kSelectHelper, optionsExpParsed, config: ConfigInstance): InternalOption[] {\n  let viewValueIDs = {};\n\n  let i = viewValue.length;\n\n  while (i--) {\n    let trackingId = value2trackingId(viewValue[i], w11kSelectHelper, optionsExpParsed);\n    viewValueIDs[trackingId] = true;\n  }\n\n  function prepareOptions (externalOption, parent?: string) {\n    let value = externalOption2value(externalOption, optionsExpParsed);\n    let trackingId = value2trackingId(value, w11kSelectHelper, optionsExpParsed);\n    let label = externalOption2label(externalOption, optionsExpParsed);\n\n    let internalOption = new InternalOption(\n        trackingId,\n        label,\n        externalOption,\n        !!viewValueIDs[trackingId],\n        viewValueIDs[trackingId] ? OptionState.selected : OptionState.unselected,\n        [],\n        parent || null\n    );\n\n    if (externalOption[config.children]) {\n      internalOption.children = externalOption[config.children].map(child => prepareOptions(child, trackingId));\n    }\n    return internalOption;\n  }\n\n  return externalOptions.map(prepareOptions);\n}\n","import {InternalOption} from '../model/internal-option.model';\nimport {OptionState} from '../model/option-state.enum';\n\nexport function collectActiveLabels (option: InternalOption, labelArray: string[]): void {\n  if (option.state === OptionState.selected) {\n    labelArray.push(option.label);\n  }\n  option.children.forEach(option => collectActiveLabels(option, labelArray));\n}\n","export function buildInternalOptionsMap (internalOptions, internalOptionsMap) {\n  internalOptions.forEach((option) => {\n    if (internalOptionsMap[option.trackingId]) {\n      throw new Error('Duplicate hash value for options ' + option.label + ' and ' + internalOptionsMap[option.trackingId].label);\n    }\n    internalOptionsMap[option.trackingId] = option;\n    if (option.children) {\n      buildInternalOptionsMap(option.children, internalOptionsMap);\n    }\n  });\n}\n","/** @internal */\nimport * as angular from 'angular';\nimport {IPromise, IScope, IFilterService, IWindowService, IQService, IDocumentService, IParseService, ITimeoutService} from 'angular';\nimport {setSelected} from './lib/set-selected';\nimport {internalOptions2externalModel} from './lib/internal-options-2-external-model';\nimport {value2trackingId} from './lib/value-2-tracking-id';\nimport {externalOptions2internalOptions} from './lib/external-options-2-internal-options';\nimport {InternalOption} from './model/internal-option.model';\nimport {OptionState} from './model/option-state.enum';\nimport {Config, ConfigInstance} from './model/config.model';\nimport {collectActiveLabels} from './lib/collect-active-labels';\nimport {buildInternalOptionsMap} from './lib/build-internal-options-map';\nimport {W11KSelectHelper} from './w11k-select-helper.factory';\n\nexport interface Scope extends IScope {\n  config: ConfigInstance;\n  style: any;  // only required once?\n  onKeyPressedOnDropDownToggle: (event: any) => void;\n  showMoreOptions: () => void;\n  onFilterValueChanged: () => void;\n  clearFilter: () => void;\n  onKeyPressedInFilter: ($event: any) => void;\n  selectFiltered: ($event?: any) => void;\n  deselectFiltered: ($event: any) => void;\n  deselectAll: ($event: any) => void;\n  select: ($event: any) => void;\n  isEmpty: () => boolean;\n\n  options: {\n    visible: any[]\n  };\n  filter: {\n    values: any\n  };\n\n  dropdown: {\n    onOpen?: ($event: any) => void | undefined;\n    onClose?: () => void | undefined;\n    close?: () => void;\n    toggle?: any\n  };\n}\n\nexport function w11kSelect (w11kSelectConfig: Config,\n                            $parse: IParseService,\n                            $document: IDocumentService,\n                            w11kSelectHelper: W11KSelectHelper,\n                            $filter: IFilterService,\n                            $timeout: ITimeoutService,\n                            $window: IWindowService,\n                            $q: IQService) {\n  'ngInject';\n\n  let jqWindow = angular.element($window);\n\n  return {\n    restrict: 'A',\n    replace: false,\n    templateUrl: w11kSelectConfig.common.templateUrl,\n    scope: {},\n    require: 'ngModel',\n    controller: function ($scope, $attrs, $parse) {\n      if ($attrs.w11kSelect && $attrs.w11kSelect.length > 0) {\n        let exposeExpression = $parse($attrs.w11kSelect);\n\n        if (exposeExpression.assign) {\n          exposeExpression.assign($scope.$parent, this);\n        }\n      }\n\n      this.open = function () {\n        $scope.dropdown.open();\n      };\n\n      this.close = function () {\n        $scope.dropdown.close();\n      };\n\n      this.toggle = function () {\n        $scope.dropdown.toggle();\n      };\n    },\n    compile: function (tElement, tAttrs) {\n      let configExpParsed = $parse(tAttrs.w11kSelectConfig);\n      let optionsExpParsed = w11kSelectHelper.parseOptions(tAttrs.w11kSelectOptions);\n\n      let ngModelSetter = $parse(tAttrs.ngModel).assign;\n      let assignValueFn = optionsExpParsed.value.assign;\n\n      if (optionsExpParsed.tracking !== undefined && assignValueFn === undefined) {\n        throw new Error('value part of w11kSelectOptions expression must be assignable if \\'track by\\' is used');\n      }\n\n      return function (scope: Scope, iElement: any, iAttrs: any, controller: any) {\n        let domElement = iElement[0];\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * internal model\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        let optionsAlreadyRead: IPromise<void>;\n        let ngModelAlreadyRead: boolean = false;\n\n        let hasBeenOpened = false;\n        let internalOptions: InternalOption[] = [];\n        let internalOptionsMap = {};\n        let optionsFiltered: InternalOption[] = [];\n\n        scope.options = {\n          visible: []\n        };\n\n        scope.filter = {\n          values: {}\n        };\n\n        scope.config = angular.copy(w11kSelectConfig.instance);\n\n        // marker to read some parts of the config only once\n        let configRead = false;\n\n        scope.$watch(\n            function () {\n              return configExpParsed(scope.$parent);\n            },\n            function (newConfig) {\n              if (angular.isArray(newConfig)) {\n                w11kSelectHelper.extendDeep.apply(null, [scope.config].concat(newConfig));\n                applyConfig();\n              } else if (angular.isObject(newConfig)) {\n                w11kSelectHelper.extendDeep(scope.config, newConfig);\n                applyConfig();\n              }\n            },\n            true\n        );\n\n        function applyConfig () {\n          optionsAlreadyRead.then(function () {\n            checkSelection();\n            updateNgModel();\n            checkConfig(scope.config, setViewValue);\n          });\n\n          if (!configRead) {\n            updateStaticTexts();\n            configRead = true;\n          }\n        }\n\n        function updateStaticTexts () {\n          if (scope.config.filter.select.active && scope.config.filter.select.text !== null && typeof(scope.config.filter.select.text) !== 'undefined') {\n            let selectFilteredButton = domElement.querySelector('.select-filtered-text');\n            selectFilteredButton.textContent = scope.config.filter.select.text;\n          }\n\n          if (scope.config.filter.deselect.active && scope.config.filter.deselect.text !== null && typeof(scope.config.filter.deselect.text) !== 'undefined') {\n            let deselectFilteredButton = domElement.querySelector('.deselect-filtered-text');\n            deselectFilteredButton.textContent = scope.config.filter.deselect.text;\n          }\n\n          if (scope.config.header.placeholder !== null && typeof(scope.config.header.placeholder) !== 'undefined') {\n            let headerPlaceholder = domElement.querySelector('.header-placeholder');\n            headerPlaceholder.textContent = scope.config.header.placeholder;\n          }\n        }\n\n        function checkSelection () {\n          if (scope.config.multiple === false) {\n            let selectedOptions: InternalOption[] = internalOptions.filter(\n                (option) => option.state === OptionState.selected\n            );\n\n            if (selectedOptions.length > 0) {\n              setSelected(selectedOptions, false);\n              selectedOptions[0].state = OptionState.selected;\n            }\n          }\n        }\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * dropdown\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        let domDropDownMenu = domElement.querySelector('.dropdown-menu');\n        let domDropDownContent = domElement.querySelector('.dropdown-menu .content');\n        let domHeightAdjustContainer = w11kSelectHelper.getParent(iElement, '.w11k-select-adjust-height-to');\n        let domHeaderText = domElement.querySelector('.header-text');\n\n        function onEscPressed (event) {\n          if (event.keyCode === 27) {\n            if (scope.dropdown.close) { // check is for ts only\n              scope.dropdown.close();\n            }\n          }\n        }\n\n        function adjustHeight () {\n          if (angular.isDefined(scope.config.style.maxHeight)) {\n            domDropDownContent.style.maxHeight = scope.config.style.maxHeight;\n          } else {\n            let maxHeight = calculateDynamicMaxHeight();\n            domDropDownContent.style.maxHeight = maxHeight + 'px';\n\n          }\n        }\n\n        function resetHeight () {\n          domDropDownContent.style.maxHeight = '';\n        }\n\n        function calculateDynamicMaxHeight () {\n          let maxHeight;\n\n          let contentOffset = domDropDownContent.getBoundingClientRect().top;\n\n          let windowHeight = $window.innerHeight || $window.document.documentElement.clientHeight;\n\n          let containerHeight;\n          let containerOffset;\n\n          if (angular.isDefined(domHeightAdjustContainer)) {\n            containerHeight = domHeightAdjustContainer.innerHeight || domHeightAdjustContainer.clientHeight;\n            containerOffset = domHeightAdjustContainer.getBoundingClientRect().top;\n          } else {\n            containerHeight = $window.innerHeight || $window.document.documentElement.clientHeight;\n            containerOffset = 0;\n          }\n\n          if (scope.config.style.marginBottom.indexOf('px') < 0) {\n            throw new Error('Illegal Value for w11kSelectStyle.marginBottom');\n          }\n          let marginBottom = parseFloat(scope.config.style.marginBottom.slice(0, -2));\n\n          let referenceHeight;\n          let referenceOffset;\n\n          if (containerHeight + containerOffset > windowHeight) {\n            referenceHeight = windowHeight;\n            referenceOffset = 0;\n          } else {\n            referenceHeight = containerHeight;\n            referenceOffset = containerOffset;\n          }\n\n          maxHeight = referenceHeight - (contentOffset - referenceOffset) - marginBottom;\n\n          let minHeightFor3Elements = 93;\n          if (maxHeight < minHeightFor3Elements) {\n            maxHeight = minHeightFor3Elements;\n          }\n\n          return maxHeight;\n        }\n\n        scope.dropdown = {\n          onOpen: function ($event) {\n            if (scope.config.disabled) {\n              $event.prevent();\n              return;\n            }\n\n            if (hasBeenOpened === false) {\n              hasBeenOpened = true;\n            }\n            filterOptions();\n\n            $document.on('keyup', onEscPressed);\n\n            domDropDownMenu.style.visibility = 'hidden';\n            $timeout(function () {\n              adjustHeight();\n              domDropDownMenu.style.visibility = 'visible';\n\n              if (scope.config.filter.active) {\n                // use timeout to open dropdown first and then set the focus,\n                // otherwise focus won't be set because iElement is not visible\n                $timeout(function () {\n                  iElement[0].querySelector('.dropdown-menu input').focus();\n                });\n              }\n            });\n            jqWindow.on('resize', adjustHeight);\n\n            if (angular.isFunction(scope.config.dropdown.onOpen)) {\n              (scope.config.dropdown.onOpen as any)();\n            }\n          },\n          onClose: function () {\n            // important: set properties of filter.values to empty strings not to null,\n            // otherwise angular's filter won't work\n            scope.filter.values.label = '';\n\n            $timeout(function () {\n              resetHeight();\n            });\n            $document.off('keyup', onEscPressed);\n            jqWindow.off('resize', adjustHeight);\n\n            if (angular.isFunction(scope.config.dropdown.onClose)) {\n              (scope.config.dropdown.onClose as any)();\n            }\n          }\n        };\n\n        scope.$on('$destroy', function () {\n          $document.off('keyup', onEscPressed);\n          jqWindow.off('resize', adjustHeight);\n        });\n\n        scope.onKeyPressedOnDropDownToggle = function ($event) {\n          // enter or space\n          if ($event.keyCode === 13 || $event.keyCode === 32) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            scope.dropdown.toggle();\n          }\n        };\n\n        function updateHeader () {\n          if (angular.isDefined(scope.config.header.text)) {\n            domHeaderText.textContent = scope.$parent.$eval(scope.config.header.text as any);\n          } else {\n            let arr = [];\n            internalOptions.forEach(option => collectActiveLabels(option, arr));\n            domHeaderText.textContent = arr.join(', ');\n          }\n        }\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * filter\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        let filter: angular.IFilterFilter = $filter('filter');\n        let initialLimitTo = 80;\n        let increaseLimitTo = initialLimitTo * 0.5;\n\n        function filterOptions () {\n          if (hasBeenOpened) {\n            // false as third parameter: use contains to compare\n            optionsFiltered = filter(internalOptions, scope.filter.values, false);\n            scope.options.visible = optionsFiltered.slice(0, initialLimitTo);\n          }\n        }\n\n        scope.showMoreOptions = function () {\n          scope.options.visible = optionsFiltered.slice(0, scope.options.visible.length + increaseLimitTo);\n        };\n\n        scope.onFilterValueChanged = function () {\n          filterOptions();\n        };\n\n        scope.clearFilter = function () {\n          scope.filter.values = {};\n          filterOptions();\n        };\n\n        scope.onKeyPressedInFilter = function ($event) {\n          // on enter\n          if ($event.keyCode === 13) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            scope.selectFiltered();\n          }\n        };\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * buttons\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        scope.selectFiltered = function ($event?) {\n          if (angular.isDefined($event)) {\n            $event.preventDefault();\n            $event.stopPropagation();\n          }\n\n          if (scope.config.multiple) {\n            setSelected(optionsFiltered, true);\n          } else if (optionsFiltered.length === 1) {\n            scope.select(optionsFiltered[0]); // behaves like if the option was clicked using the mouse\n          }\n\n          setViewValue();\n        };\n\n        scope.deselectFiltered = function ($event) {\n          if (angular.isDefined($event)) {\n            $event.preventDefault();\n            $event.stopPropagation();\n          }\n\n          setSelected(optionsFiltered, false);\n          setViewValue();\n        };\n\n        scope.deselectAll = function ($event) {\n          if (angular.isDefined($event)) {\n            $event.preventDefault();\n            $event.stopPropagation();\n          }\n\n          setSelected(internalOptions, false);\n          setViewValue();\n        };\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * options\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        let updateOptions = (function () {\n          let deferred = $q.defer<void>();\n          optionsAlreadyRead = deferred.promise;\n\n          return function updateOptions () {\n            let externalOptions = optionsExpParsed.collection(scope.$parent);\n            let viewValue = controller.$viewValue;\n\n            if (angular.isArray(externalOptions)) {\n              internalOptions = externalOptions2internalOptions(externalOptions, viewValue, w11kSelectHelper, optionsExpParsed, scope.config);\n              internalOptionsMap = {};\n              buildInternalOptionsMap(internalOptions,internalOptionsMap);\n              filterOptions();\n\n              if (ngModelAlreadyRead) {\n                updateNgModel();\n              }\n              deferred.resolve();\n            }\n          };\n        })();\n\n        // watch for changes of options collection made outside\n        scope.$watchCollection(\n            function externalOptionsWatch () {\n              return optionsExpParsed.collection(scope.$parent);\n            },\n            function externalOptionsWatchAction (newVal) {\n              if (angular.isDefined(newVal)) {\n                updateOptions();\n              }\n            }\n        );\n\n        scope.select = function select (option: InternalOption) {\n          // runs only if hierarchy is flat and multiple false\n\n          if (scope.config.multiple) {\n            setViewValue();\n            return;\n          }\n\n          // disable all others:\n          setSelected(internalOptions, false);\n          option.state = OptionState.selected;\n          setViewValue();\n          (scope.dropdown.close as any)();\n        };\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * ngModel\n         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n        function setViewValue () {\n          let selectedValues = internalOptions2externalModel(internalOptions, optionsExpParsed, w11kSelectConfig);\n\n          controller.$setViewValue(selectedValues);\n          updateHeader();\n        }\n\n        function updateNgModel () {\n          let value = internalOptions2externalModel(internalOptions, optionsExpParsed, w11kSelectConfig);\n          angular.forEach(controller.$parsers, function (parser) {\n            value = parser(value);\n          });\n\n          ngModelSetter(scope.$parent, value);\n        }\n\n        function render () {\n          optionsAlreadyRead.then(function () {\n            ngModelAlreadyRead = true;\n\n            let viewValue = controller.$viewValue;\n\n            setSelected(internalOptions, false);\n\n            let i = viewValue.length;\n            while (i--) {\n              let trackingId = value2trackingId(viewValue[i], w11kSelectHelper, optionsExpParsed);\n              let option = internalOptionsMap[trackingId];\n\n              if (option) {\n                option.state = OptionState.selected;\n              }\n            }\n\n            updateHeader();\n          });\n        }\n\n        function external2internal (modelValue) {\n          let viewValue;\n\n          if (angular.isArray(modelValue)) {\n            viewValue = modelValue;\n          } else if (angular.isDefined(modelValue)) {\n            viewValue = [modelValue];\n          } else {\n            viewValue = [];\n          }\n\n          return viewValue;\n        }\n\n        function internal2external (viewValue) {\n          if (angular.isUndefined(viewValue)) {\n            return;\n          }\n\n          let modelValue;\n\n          if (scope.config.multiple || scope.config.forceArrayOutput) {\n            modelValue = viewValue;\n          } else {\n            modelValue = viewValue[0];\n          }\n\n          return modelValue;\n        }\n\n        function validateRequired (value): boolean {\n          if (scope.config.required) {\n            if (scope.config.multiple === true && value.length === 0) {\n              return false;\n            }\n            if (scope.config.multiple === false && scope.config.forceArrayOutput === true && value.length === 0) {\n              return false;\n            }\n            if (scope.config.multiple === false && value === undefined) {\n              return false;\n            }\n\n          }\n\n          return true;\n        }\n\n        function isEmpty () {\n          let value = controller.$viewValue;\n          return !(angular.isArray(value) && value.length > 0);\n        }\n\n        scope.isEmpty = isEmpty;\n\n        controller.$isEmpty = isEmpty;\n\n        controller.$render = render;\n        controller.$formatters.push(external2internal);\n        controller.$validators.required = validateRequired;\n        controller.$parsers.push(internal2external);\n\n      };\n    }\n  };\n}\n\nfunction checkConfig (config: ConfigInstance, setViewValue) {\n  /**\n   *  Currently there is a bug if multiple = false and required = true.\n   *  Then the validator runs only once, before the config is present\n   *  and returns a wrong validation state.\n   *  might be fixed by calling updateNgModel() here\n   */\n  // throw error if multiple is false and childrenKey is present\n  if (config.children && !config.multiple) {\n    throw new Error('Multiple must be enabled when displaying hierarchically structure');\n  }\n  if (config.children) {\n    setViewValue();\n  }\n}\n","import {OptionState} from '../model/option-state.enum';\nimport {InternalOption} from '../model/internal-option.model';\nimport {Config} from '../model/config.model';\nimport {IDirective} from 'angular';\n\nclass Result {\n  selected: number = 0;\n  unselected: number = 0;\n  childsSelected: number = 0;\n  length: number;\n\n  constructor (length: number) {\n    this.length = length;\n  }\n}\n\nexport function w11kSelectOptionDirective (w11kSelectConfig: Config): IDirective {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    replace: false,\n    templateUrl: w11kSelectConfig.common.templateUrlOptions,\n    scope: {\n      'options': '=',\n      'parent': '=',\n      'select': '&'\n    },\n    require: 'ngModel',\n    controller: function ($scope) {\n      if ($scope.$parent.childsMap) {\n        $scope.$parent.addChild($scope, $scope.parent);\n      }\n      $scope.childsMap = {};\n\n      $scope.upwardsClick = function (clickedOption: InternalOption, res: Result) {\n        let fatherOption: InternalOption = $scope.options.find(option => option.trackingId === clickedOption.parent);\n        if (res.selected === 0 && res.childsSelected === 0) {\n          setSelected(fatherOption, OptionState.unselected, $scope);\n        } else if (res.selected === res.length) {\n          setSelected(fatherOption, OptionState.selected, $scope);\n        } else {\n          setSelected(fatherOption, OptionState.childsSelected, $scope);\n\n        }\n\n        if ($scope.$parent.upwardsClick) {\n          let res = calcRes($scope.options);\n          $scope.$parent.upwardsClick(fatherOption, res);\n        }\n      };\n\n      $scope.addChild = function (childScope, father) {\n        $scope.childsMap[father.trackingId] = childScope;\n      };\n      $scope.onOptionStateClick = function ($event, option: InternalOption) {\n\n        switch (option.state) {\n          case OptionState.unselected:\n            setSelected(option, OptionState.selected, $scope);\n            break;\n          case OptionState.selected:\n            setSelected(option, OptionState.unselected, $scope);\n            break;\n          case OptionState.childsSelected:\n            setSelected(option, OptionState.selected, $scope);\n            break;\n        }\n\n        // upwards Click\n        if ($scope.$parent.upwardsClick) {\n          let res = calcRes($scope.options);\n          $scope.$parent.upwardsClick(option, res);\n        }\n\n        $scope.childsMap[option.trackingId].downWardstoggleAll(option.state);\n      };\n\n      $scope.downWardstoggleAll = function (toSetState: OptionState) {\n        $scope.options = toggleDownWards($scope.options, toSetState, $scope);\n      };\n    }\n  };\n}\n\nfunction toggleDownWards (options: InternalOption[], toSetState: OptionState, $scope): InternalOption[] {\n  return options.map(\n      option => {\n        option.children = toggleDownWards(option.children, toSetState, $scope);\n        setSelected(option, toSetState, $scope);\n        return option;\n      }\n  );\n}\n\nfunction calcRes (options: InternalOption[]): Result {\n  return options.reduce(\n      (prev: Result, next: InternalOption) => {\n        if (next.state === OptionState.selected) {\n          prev.selected++;\n        }\n        if (next.state === OptionState.unselected) {\n          prev.unselected++;\n        }\n        if (next.state === OptionState.childsSelected) {\n          prev.childsSelected++;\n        }\n\n        return prev;\n\n      },\n      new Result(options.length));\n}\n\nfunction setSelected (option: InternalOption, optionState: OptionState, $scope) {\n  option.state = optionState;\n  $scope.select({option: option});\n}\n","import {OptionState} from '../model/option-state.enum';\nimport {IDirective} from 'angular';\n\nexport class W11KSelectCheckbox {\n  state: OptionState;\n  toggle: Function;\n\n  getClass (state: OptionState): string {\n    return OptionState[state];\n  }\n\n}\n\nexport function w11kSelectCheckboxDirective (): IDirective {\n  return {\n    scope: {\n      'state': '=',\n    },\n    bindToController: true,\n    controllerAs: '$ctrl',\n    template: `<a class=\"w11k-checkbox\" ng-class=\"$ctrl.getClass($ctrl.state)\"></a>`,\n    restrict: 'E',\n    controller: W11KSelectCheckbox\n  };\n}\n","export function w11kSelectInfiniteScroll($timeout) {\n  'ngInject';\n  return {\n    link: function (scope, element, attrs) {\n      let scrollDistance = 0;\n      let scrollEnabled = true;\n      let checkImmediatelyWhenEnabled = false;\n\n      let onDomScrollHandler = function () {\n        onScrollHandler(true);\n      };\n\n      let scrollContainer = element[0];\n\n      if (scrollContainer.children.length !== 1) {\n        throw new Error('scroll container has to have exactly one child!');\n      }\n\n      let content = scrollContainer.children[0];\n\n      let onScrollHandler = function (apply?) {\n\n        let distanceToBottom = content.clientHeight - scrollContainer.scrollTop;\n        let shouldScroll = distanceToBottom <= scrollContainer.clientHeight * (scrollDistance + 1);\n\n        if (shouldScroll && scrollEnabled) {\n          if (apply) {\n            scope.$apply(function () {\n              scope.$eval(attrs.w11kSelectInfiniteScroll);\n            });\n          }\n          else {\n            scope.$eval(attrs.w11kSelectInfiniteScroll);\n          }\n        }\n        else if (shouldScroll) {\n          checkImmediatelyWhenEnabled = true;\n        }\n      };\n\n      attrs.$observe('w11kSelectInfiniteScrollDistance', function (value: any) {\n        scrollDistance = parseFloat(value);\n      });\n\n\n      attrs.$observe('w11kSelectInfiniteScrollDisabled', function (value: any) {\n        scrollEnabled = !value;\n\n        if (scrollEnabled && checkImmediatelyWhenEnabled) {\n          checkImmediatelyWhenEnabled = false;\n          onScrollHandler();\n        }\n      });\n\n      element.on('scroll', onDomScrollHandler);\n      scope.$on('$destroy', function () {\n        element.off('scroll', onDomScrollHandler);\n      });\n\n      return $timeout(function () {\n        if (attrs.w11kSelectInfiniteScrollImmediateCheck) {\n          if (scope.$eval(attrs.w11kSelectInfiniteScrollImmediateCheck)) {\n            onScrollHandler();\n          }\n        }\n      });\n    }\n  };\n}\n","export function keyListener () {\n  return function (scope, elm, attrs) {\n    // prevent scroll on space click\n    elm.bind('keydown', function (event) {\n      if (event.keyCode === 32) {\n        event.preventDefault();\n      }\n    });\n\n    // trigger click on spacer || enter\n    elm.bind('keyup', function (event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        scope.$apply(attrs.keyListener);\n      }\n    });\n\n  };\n}\n","export class ConfigCommon {\n  templateUrl: string = 'w11k-select.tpl.html';\n  templateUrlOptions: string = 'w11k-select-option.tpl.html';\n}\nexport interface StyleConfig {\n  marginBottom: '10px';\n  maxHeight: undefined | string;\n}\n\nexport interface FilterConfig {\n  active: boolean;\n  placeholder: string;\n  select: {\n    active: boolean;\n    text: undefined | string;\n  };\n  deselect: {\n    active: true,\n    text: undefined | string;\n  };\n}\n\nexport class ConfigInstance {\n  /** for form validation */\n  required: boolean = false;\n  /** Hide checkboxes during single selection */\n  hideCheckboxes: boolean = false;\n  /** single or multiple select */\n  multiple: boolean = true;\n  /** force ngModel to be an array for single select too */\n  forceArrayOutput = false;\n  /** disable user interaction */\n  disabled: boolean = false;\n  /** all the configuration for the header (visible if dropdown closed) */\n  header = {\n    /** text to show if no item selected (plain text, no evaluation, no data-binding) */\n    placeholder: '',\n    /**\n     * text to show if item(s) selected (expression, evaluated against user scope)\n     * make sure to enclose your expression withing quotes, otherwise it will be evaluated too early\n     * default: undefined evaluates to a comma separated representation of selected items\n     * example: ng-model='options.selected' w11k-select-config='{header: {placeholder: 'options.selected.length'}}'\n     */\n    text: undefined\n  };\n  dropdown: {\n    onOpen: (() => void) | undefined,\n    onClose: (() => void) | undefined\n  } = {\n    onOpen: undefined,\n    onClose: undefined\n  };\n  /** all the configuration for the filter section within the dropdown */\n  filter: FilterConfig = {\n    /** activate filter input to search for options */\n    active: true,\n    /** text to show if no filter is applied */\n    placeholder: 'Filter',\n    /** 'select all filtered options' button */\n    select: {\n      /** show select all button */\n      active: true,\n      /**\n       * label for select all button\n       * default: undefined evaluates to 'all'\n       */\n      text: undefined\n    },\n    /** 'deselect all filtered options' button */\n    deselect: {\n      /** show deselect all button */\n      active: true,\n      /**\n       * label for deselect all button\n       * default: undefined evaluates to 'none'\n       */\n      text: undefined\n    }\n  };\n\n  /** values for dynamically calculated styling of dropdown */\n  style: StyleConfig = {\n    /** margin-bottom for automatic height adjust */\n    marginBottom: '10px',\n    /** static or manually calculated max height (disables internal height calculation) */\n    maxHeight: undefined\n  };\n  /** when set to true, the clear-button is always visible. */\n  showClearAlways: boolean = false;\n  children: string;\n\n}\n\nexport class Config {\n  common: ConfigCommon;\n  instance: ConfigInstance;\n\n  constructor (common?: ConfigCommon, instance?: ConfigInstance) {\n    this.common = common || new ConfigCommon();\n    this.instance = instance || new ConfigInstance();\n  }\n}\n","export enum OptionState {\n  unselected,\n  selected,\n  childsSelected\n}\n","/** @internal */\nimport * as angular from 'angular';\nimport {IDocumentService, IParseService} from 'angular';\n\nexport class W11KSelectHelper {\n\n  //               value                 as    label                for       item              in    collection                    |  filter                        track by     tracking\n  OPTIONS_EXP = /^([a-zA-Z][\\w\\.]*)(?:\\s+as\\s+([a-zA-Z][\\w\\.]*))?\\s+for\\s+(?:([a-zA-Z][\\w]*))\\s+in\\s+([$_a-zA-Z][\\w\\.\\(\\)]*(?:\\s+\\|\\s[a-zA-Z][\\w\\:_\\{\\}']*)*)(?:\\s+track\\sby\\s+([a-zA-Z][\\w\\.]*))?$/;\n\n  constructor (public $parse: IParseService,\n               public $document: IDocumentService) {\n    'ngInject';\n\n  }\n\n  extendDeep (dst, ...otherArgs) {\n    angular.forEach(otherArgs, (obj) => {\n      if (obj !== dst) {\n        angular.forEach(obj, (value, key) => {\n          if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\n            this.extendDeep(dst[key], value);\n          } else {\n            dst[key] = value;\n          }\n        });\n      }\n    });\n    return dst;\n  }\n\n  hashCode (value) {\n    let valueAsString: string;\n    if (typeof value === 'object') {\n      valueAsString = angular.toJson(value);\n    } else {\n      valueAsString = value.toString();\n    }\n\n    let hash = 0;\n    let length = valueAsString.length;\n    for (let i = 0; i < length; i++) {\n      hash = valueAsString.charCodeAt(i) + (hash << 6) + (hash << 16) - hash;\n    }\n\n    return hash.toString(36);\n  }\n\n  parseOptions (input) {\n\n    let match = input.match(this.OPTIONS_EXP);\n    if (!match) {\n      let expected = '\"item.value\" [as \"item.label\"] for \"item\" in \"collection [ | filter ] [track by item.value.unique]\"';\n      throw new Error('Expected options in form of \\'' + expected + '\\' but got \"' + input + '\".');\n    }\n\n    let result: any = {\n      value: this.$parse(match[1]),\n      label: this.$parse(match[2] || match[1]),\n      item: match[3],\n      collection: this.$parse(match[4])\n    };\n\n    if (match[5] !== undefined) {\n      result.tracking = this.$parse(match[5]);\n    }\n\n    return result;\n  }\n\n  getParent (element, selector) {\n    // with jQuery\n    if (angular.isFunction(element.parents)) {\n      let container = element.parents(selector);\n      if (container.length > 0) {\n        return container[0];\n      }\n\n      return;\n    }\n\n    // without jQuery\n    let matchesSelector = 'MatchesSelector';\n    let matchFunctions = [\n      'matches',\n      'matchesSelector',\n      'moz' + matchesSelector,\n      'webkit' + matchesSelector,\n      'ms' + matchesSelector,\n      'o' + matchesSelector\n    ];\n\n    for (let index in matchFunctions) {\n      let matchFunction = matchFunctions[index];\n      if (angular.isFunction(element[0][matchFunction])) {\n        let parent1 = element[0].parentNode;\n        while (parent1 !== this.$document[0]) {\n          if (parent1[matchFunction](selector)) {\n            return parent1;\n          }\n          parent1 = parent1.parentNode;\n        }\n\n        return;\n      }\n    }\n\n    return;\n  }\n}\n","import {OptionState} from './option-state.enum';\n\nexport class InternalOption {\n\n  trackingId: string;\n  label: string;\n  model: any;\n  selected: boolean;\n  state: OptionState;\n  children: any[];\n  parent: any;\n\n  constructor (trackingId: string, label: string, model: any, selected: boolean, state: OptionState, children: any[], parent: any) {\n    this.trackingId = trackingId;\n    this.label = label;\n    this.model = model;\n    this.selected = selected;\n    this.state = state;\n    this.children = children;\n    this.parent = parent;\n  }\n}\n","'use strict';\n/** @internal */\nimport * as angular from 'angular';\nimport {IModule} from 'angular';\nimport {Config} from './model/config.model';\nimport {W11KSelectHelper} from './w11k-select-helper.factory';\nimport {w11kSelect} from './w11k-select.directive';\nimport {w11kSelectOptionDirective} from './w11k-select-option/w11k-select-option.directive';\nimport {w11kSelectCheckboxDirective} from './w11k-select-checkbox/w11k-checkbox.directive';\nimport {w11kSelectInfiniteScroll} from './w11k-select-infinite-scroll.directive';\nimport {keyListener} from './lib/key-listener';\n\nexport const module: IModule = angular.module('w11k.select', [\n  'w11k.dropdownToggle',\n  'w11k.select.template'\n]);\n\nmodule\n    .constant('w11kSelectConfig', new Config())\n    .directive('w11kSelectInfiniteScroll', w11kSelectInfiniteScroll)\n    .service('w11kSelectHelper', W11KSelectHelper)\n    .directive('w11kSelect', w11kSelect)\n    .directive('w11kSelectOption', w11kSelectOptionDirective)\n    .directive('w11kSelectCheckbox', w11kSelectCheckboxDirective)\n    .directive('keyListener', keyListener);\n"],"names":["options","selected","i","length","state","OptionState","unselected","setSelected","children","option","optionsExpParsed","context","item","value","externalOption2value","model","config","arr","forEach","traverse","push","internalOption2value","w11kSelectHelper","undefined","tracking","assignValueFn","assign","trackingValue","Error","toString","hashCode","label","externalOptions","viewValue","externalOption","parent","trackingId","value2trackingId","externalOption2label","internalOption","InternalOption","viewValueIDs","map","child","prepareOptions","labelArray","collectActiveLabels","internalOptions","internalOptionsMap","buildInternalOptionsMap","w11kSelectConfig","$parse","$document","$filter","$timeout","$window","$q","jqWindow","angular.element","restrict","replace","templateUrl","common","scope","require","controller","$scope","$attrs","w11kSelect","exposeExpression","$parent","this","open","dropdown","close","toggle","compile","tElement","tAttrs","configExpParsed","parseOptions","w11kSelectOptions","ngModelSetter","ngModel","iElement","iAttrs","optionsAlreadyRead","then","checkSelection","updateNgModel","checkConfig","setViewValue","configRead","updateStaticTexts","filter","select","active","text","domElement","querySelector","textContent","deselect","header","placeholder","multiple","selectedOptions","event","keyCode","angular.isDefined","style","maxHeight","domDropDownContent","calculateDynamicMaxHeight","containerHeight","containerOffset","contentOffset","getBoundingClientRect","top","windowHeight","innerHeight","document","documentElement","clientHeight","domHeightAdjustContainer","marginBottom","indexOf","referenceHeight","referenceOffset","parseFloat","slice","domHeaderText","$eval","arr_1","join","hasBeenOpened","optionsFiltered","values","visible","initialLimitTo","selectedValues","internalOptions2externalModel","$setViewValue","updateHeader","angular.forEach","$parsers","parser","ngModelAlreadyRead","$viewValue","modelValue","angular.isArray","angular.isUndefined","forceArrayOutput","required","angular.copy","instance","$watch","newConfig","extendDeep","apply","concat","applyConfig","angular.isObject","domDropDownMenu","getParent","onOpen","$event","disabled","prevent","filterOptions","on","onEscPressed","visibility","adjustHeight","focus","angular.isFunction","onClose","resetHeight","off","$on","onKeyPressedOnDropDownToggle","preventDefault","stopPropagation","increaseLimitTo","showMoreOptions","onFilterValueChanged","clearFilter","onKeyPressedInFilter","selectFiltered","deselectFiltered","deselectAll","updateOptions","deferred","defer","promise","collection","externalOptions2internalOptions","resolve","$watchCollection","newVal","isEmpty","$isEmpty","$render","render","$formatters","external2internal","$validators","validateRequired","internal2external","templateUrlOptions","childsMap","addChild","upwardsClick","clickedOption","res","fatherOption","find","childsSelected","res_1","calcRes","childScope","father","onOptionStateClick","downWardstoggleAll","toSetState","toggleDownWards","reduce","prev","next","Result","optionState","bindToController","controllerAs","template","W11KSelectCheckbox","link","element","attrs","scrollDistance","scrollEnabled","checkImmediatelyWhenEnabled","onDomScrollHandler","onScrollHandler","scrollContainer","content","distanceToBottom","scrollTop","shouldScroll","$apply","w11kSelectInfiniteScroll","$observe","w11kSelectInfiniteScrollImmediateCheck","elm","bind","keyListener","ConfigCommon","ConfigInstance","W11KSelectHelper","dst","_i","otherArgs","obj","key","constructor","Object","_this","valueAsString","angular.toJson","hash","charCodeAt","input","match","OPTIONS_EXP","result","selector","parents","container","matchFunctions","index","matchFunction","parent1","parentNode","module","angular.module","constant","Config","directive","service","w11kSelectOptionDirective","w11kSelectCheckboxDirective"],"mappings":"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"}